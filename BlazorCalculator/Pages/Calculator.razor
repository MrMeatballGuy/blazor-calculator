@page "/calculator"
@inject ICustomMath customMath

<h1>Basic Calculator Demo Using Blazor</h1>
<hr />
<div>
    <div class="row">
        <div class="col-md-3">
            <p>First Number</p>
        </div>
        <div class="col-md-4">
            <input id="first-num" placeholder="Enter First Number" @bind="@num1" />
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-3">
            <p>Second Number</p>
        </div>
        <div class="col-md-4">
            <input id="second-num" placeholder="Enter Second Number" @bind="@num2" />
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-3">
            <p>Result</p>
        </div>
        <div class="col-md-4">
            <input id="result" readonly @bind="@finalresult" />
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-2">
            <button id="add-btn" @onclick="AddNumbers" class="btn btn-light">Add (+)</button>
        </div>
        <div class="col-md-2">
            <button id="subtract-btn" @onclick="SubtractNumbers" class="btn btn-primary">Subtract (−)</button>
        </div>
        <div class="col-md-2">
            <button id="multiply-btn" @onclick="MultiplyNumbers" class="btn btn-success ">Multiply (X)</button>
        </div>
        <div class="col-md-2">
            <button id="divide-btn" @onclick="DivideNumbers" class="btn btn-info">Divide (/)</button>
        </div>
        <div class="col-md-2">
            <button id="pct-btn" @onclick="GetPercentage" class="btn btn-info">Percentage (/)</button>
        </div>
        <div class="col-md-2">
            <button id="mod-btn" @onclick="GetModulo" class="btn btn-info">Modulo (/)</button>
        </div>
        <div class="col-md-2">
            <button id="clr-btn" @onclick="ClearAll" class="btn btn-info">Clear (/)</button>
        </div>
    </div>
</div>

@code {
    string num1;
    string num2;
    string finalresult;

    void AddNumbers()
    {   
        try
        {
            finalresult = customMath.AddNumbers(Convert.ToDouble(num1), Convert.ToDouble(num2)).ToString();
        }
        catch (Exception ex)
        {
            finalresult = ex.Message;
        }
    }

    void SubtractNumbers()
    {

        try
        {
            finalresult = customMath.SubtractNumbers(Convert.ToDouble(num1), Convert.ToDouble(num2)).ToString();
        }
        catch (Exception ex)
        {
            finalresult = ex.Message;
        }
    }

    void MultiplyNumbers()
    {
        try
        {
            finalresult = customMath.MultiplyNumbers(Convert.ToDouble(num1), Convert.ToDouble(num2)).ToString();
        }
        catch (Exception ex)
        {
            finalresult = ex.Message;
        }
}
    
    void DivideNumbers()
    {
        try
        {
            finalresult = customMath.DivideNumbers(Convert.ToDouble(num1), Convert.ToDouble(num2)).ToString();
        }
        catch (Exception ex)
        {
            finalresult = ex.Message;
        }
    }

    void GetPercentage()
    {

        try
        {
            finalresult = customMath.GetPercentage(Convert.ToDouble(num1), Convert.ToDouble(num2)).ToString();
        }
        catch (Exception ex)
        {
            finalresult = ex.Message;
        }
        
    }
    
    void GetModulo()
    {

        try
        {
            finalresult = customMath.GetModulo(Convert.ToDouble(num1), Convert.ToDouble(num2)).ToString();
        }
        catch (Exception ex)
        {
            finalresult = ex.Message;
        }
    }

    void ClearAll()
    {
        num1 = "";
        num2 = "";
        finalresult = "";
    }

}
